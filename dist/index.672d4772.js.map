{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n\n  constructor(coords, disatance, duration) {\n    this.coords = coords; // [lat, lng]\n    this.disatance = disatance; // km\n    this.duration = duration; // min\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n  constructor(coords, disatance, duration, cadence) {\n    super(coords, disatance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    this.pace = this.duration / this.disatance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n  constructor(coords, disatance, duration, elevationGain) {\n    super(coords, disatance, duration);\n    this.elevationGain = elevationGain;\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    this.speed = this.disatance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n// const run = new Running([22, 22], 7, 88, 180);\n// const cycling = new Running([22, 22], 27, 100, 344);\n// console.log(run, cycling);\n\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    this._getPosition();\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    inputType.addEventListener('change', this._toggleElevation.bind(this));\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n    this._getLocalStorage();\n\n    containerWorkouts.addEventListener('click', this._deleteWorkout.bind(this));\n  }\n\n  _getPosition() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert('Could not get your position');\n        }\n      );\n    }\n  }\n\n  _loadMap(pos) {\n    const { latitude, longitude } = pos.coords;\n\n    const coords = [latitude, longitude];\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    this.#map.on('click', this._showFrom.bind(this));\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n\n  _showFrom(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    inputCadence.value =\n      inputDistance.value =\n      inputDuration.value =\n      inputElevation.value =\n        '';\n\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevation() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? 'üèÉ‚Äç‚ôÇÔ∏è' : 'üö¥‚Äç‚ôÄÔ∏è'} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkoutList(workout) {\n    let html = `\n        <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n          <h2 class=\"workout__title\">${workout.description}</h2>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">${\n              workout.type === 'running' ? 'üèÉ‚Äç‚ôÇÔ∏è' : 'üö¥‚Äç‚ôÄÔ∏è'\n            }</span>\n            <span class=\"workout__value\">${workout.disatance}</span>\n            <span class=\"workout__unit\">km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">‚è±</span>\n            <span class=\"workout__value\">${workout.duration}</span>\n            <span class=\"workout__unit\">min</span>\n          </div>\n    `;\n\n    if (workout.type === 'running') {\n      html += `\n          <div class=\"workout__details\">\n              <span class=\"workout__icon\">‚ö°Ô∏è</span>\n              <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n              <span class=\"workout__unit\">min/km</span>\n            </div>\n            <div class=\"workout__details\">\n              <span class=\"workout__icon\">ü¶∂üèº</span>\n              <span class=\"workout__value\">${workout.cadence}</span>\n              <span class=\"workout__unit\">spm</span>\n            </div>\n            <button class=\"delete-btn\" data-id=\"${workout.id}\">Delete</button>\n        </li>\n      `;\n    }\n\n    if (workout.type === 'cycling') {\n      html += `\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">‚ö°Ô∏è</span>\n            <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n            <span class=\"workout__unit\">km/h</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">‚õ∞</span>\n            <span class=\"workout__value\">${workout.elevationGain}</span>\n            <span class=\"workout__unit\">m</span>\n          </div>\n          <button class=\"delete-btn\" data-id=\"${workout.id}\">Delete</button>\n        </li>\n      `;\n    }\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _newWorkout(e) {\n    e.preventDefault();\n\n    // Helper functions\n    const isNum = (...inputs) => inputs.every(inp => Number.isFinite(inp));\n    const positiveNum = (...inputs) => inputs.every(inp => inp > 0);\n\n    // Get data\n    const type = inputType.value;\n    const disatance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n\n    // Creting workout\n    let workout;\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      if (\n        !isNum(disatance, duration, cadence) ||\n        !positiveNum(disatance, duration, cadence)\n      )\n        return alert('Inputs must be positive numbers');\n\n      workout = new Running([lat, lng], disatance, duration, cadence);\n    }\n\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n      if (\n        !isNum(disatance, duration, elevation) ||\n        !positiveNum(disatance, duration)\n      )\n        return alert('Inputs must be positive numbers');\n\n      workout = new Cycling([lat, lng], disatance, duration, elevation);\n    }\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout list\n    this._renderWorkoutList(workout);\n\n    // Clearing fields and hide form\n    this._hideForm();\n\n    // Saving workout in array\n    this.#workouts.push(workout);\n\n    // Save data in local storage\n    this._setLocalStorage();\n  }\n\n  _moveToPopup(e) {\n    if (e.target.classList.contains('delete-btn')) return;\n\n    const workEl = e.target.closest('.workout');\n\n    if (!workEl) return;\n\n    const workout = this.#workouts.find(wo => wo.id === workEl.dataset.id);\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => {\n      this._renderWorkoutList(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n  }\n\n  _deleteWorkout(e) {\n    const workEl = e.target.closest('.delete-btn');\n\n    if (!workEl) return;\n    const workout = this.#workouts.find(work => work.id === workEl.dataset.id);\n    const index = this.#workouts.indexOf(workout);\n    this.#workouts.splice(index, 1);\n    this._setLocalStorage();\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}